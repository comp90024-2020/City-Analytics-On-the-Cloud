---
# Set up clustered CouchDB
# http://docs.couchdb.org/en/stable/setup/cluster.html
# https://docs.couchdb.org/en/stable/api/server/common.html#cluster-setup
# https://stackoverflow.com/questions/40696130

- name: IP/name mapping
  run_once: yes
  debug:
    msg: "{{ hostvars['localhost']['ip_names'] }}"

- name: Create couch directory
  become: yes
  file:
    path: '{{ couch.dir }}'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    recurse: yes
    state: directory

# Section 2.2.3, steps 1, 2, 3
- name: Upload compose file
  template:
    src: docker-compose.yaml.j2
    dest: '{{ couch.dir }}/docker-compose.yaml'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'

# Down
# - name: couch docker-compose down
#   docker_compose:
#     project_src: '{{ couch.dir }}'
#     state: absent
#     remove_orphans: yes

# Remove data directory
# When we want to restart from fresh installation
# - name: remove couch data directory
#   become: yes
#   file:
#     path: '{{ couch.dir }}/data'
#     state: absent

# Create directory
- name: Create couch data directory
  become: yes
  file:
    path: '{{ couch.dir }}/data'
    owner: '5984'
    group: '5984'
    recurse: yes
    state: directory

# Start and wait
- name: couch docker-compose up
  docker_compose:
    project_src: '{{ couch.dir }}'
    pull: yes
    state: present
    remove_orphans: yes
    recreate: smart

- name: Wait for connection
  wait_for:
    port: 5984
    timeout: 120

# Check status on first node
- name: Check couch status
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@127.0.0.1:5984/_cluster_setup'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
  register: couch_cluster
  until: couch_cluster.status == 200
  retries: 12
  delay: 5

# docker-compose will already enable cluster, so will probably be skipped
- name: Setup couch on each node
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@{{ inventory_hostname }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "{{ couch.user }}", "password": "{{ couch.password }}", "node_count": {{ couch.node_count }}}'
    body_format: json
    force_basic_auth: yes
  when: "couch_cluster.json.state == 'cluster_disabled'"

# Get cluster membership of nodes
- name: Get membership
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@127.0.0.1:5984/_membership'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
  register: couch_membership
  until: couch_membership.status == 200
  retries: 12
  delay: 5

- name: Map joined nodes to IPs
  run_once: true
  set_fact:
    couch_cluster_nodes: "{{ couch_membership.json.cluster_nodes | regex_replace('couchdb@') | regex_replace('.comp90024') }}"

# Add nodes not present
- name: Add nodes to cluster part 1
  run_once: true
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@{{ inventory_hostname }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "{{ couch.user }}", "password": "{{ couch.password }}", "port": 5984, "node_count": {{ couch.node_count }}, "remote_node": "{{ item }}.comp90024", "remote_current_user": "{{ couch.user }}", "remote_current_password": "{{ couch.password }}" }'
    body_format: json
    force_basic_auth: yes
    status_code: 201
  with_items:
    - "{{ hostvars['localhost']['instance_names'] | difference(couch_cluster_nodes) }}"

# Add nodes not present
- name: Add nodes to cluster part 2
  run_once: true
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@{{ inventory_hostname }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "add_node", "host":"{{ item }}.comp90024", "port": 5984, "username": "{{ couch.user }}", "password":"{{ couch.password }}", "singlenode": false}'
    body_format: json
    force_basic_auth: yes
    status_code: 201
  with_items:
    - "{{ hostvars['localhost']['instance_names'] | difference(couch_cluster_nodes) }}"

# Trigger web interface refresh
- name: Access /
  run_once: true
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@{{ inventory_hostname }}:5984'
    method: 'GET'
    force_basic_auth: yes
    status_code: 200
  when: "couch_cluster.json.state == 'cluster_enabled'"

# Finish setup
- name: Finish cluster setup
  run_once: true
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@{{ inventory_hostname }}:5984/_cluster_setup'
    method: 'POST'
    body: '{"action": "finish_cluster"}'
    body_format: json
    force_basic_auth: yes
    status_code: 201
  when: "couch_cluster.json.state == 'cluster_enabled'"

# Check setup
# TODO: check number of nodes
- name: Check couch cluster setup
  uri:
    url: 'http://{{ couch.user }}:{{ couch.password }}@127.0.0.1:5984/_cluster_setup'
    method: 'GET'
    return_content: yes
    force_basic_auth: yes
  register: couch_cluster
  failed_when: "couch_cluster.json.state != 'cluster_finished'"
  until: couch_cluster.status == 200
  retries: 12
  delay: 5
