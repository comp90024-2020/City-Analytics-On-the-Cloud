{"_id": "_design/api-global", "options": {"partitioned": false}, "lists": {}, "shows": {}, "views": {"keyword": {"map": "function (doc) {\n    var sp_doc = doc.full_text.match(/\\w+/g).map((s) => s.toLowerCase());\n    var sp = [...new Set(sp_doc)];\n    for (var i = 0; i < sp.length; i++) {\n        emit([sp[i], doc.sa2_2016_lv12_code], 1);\n    }\n}", "reduce": "_count", "partitioned": false}, "count": {"map": "function (doc) {\n    emit(doc._id, 1);\n}", "reduce": "_count", "partitioned": false}, "count-area": {"map": "function (doc) {\n    emit(doc.sa2_2016_lv12_code, 1);\n}", "reduce": "_count", "partitioned": false}, "weekday": {"map": "function (doc) {\n    var dt = new Date(doc.created_at);\n    var dayofweek = dt.toLocaleString('en-US', {timeZone: 'Australia/Melbourne', weekday: 'short'});\n    emit(dayofweek, dayofweek);\n}", "reduce": "_count", "partitioned": false}, "hour": {"map": "function (doc) {\n    var dt = new Date(doc.created_at);\n    var dt_str = dt.toLocaleTimeString('en-US', {timeZone: 'Australia/Melbourne', hour12: false});\n    var hour = Number(dt_str.split(':')[0]);\n    emit(hour, hour);\n}\n", "reduce": "_count", "partitioned": false}, "exercise": {"map": "function (doc) {\n  emit([doc.sa2_2016_lv12_code, Math.round(Math.random())], 1);\n}", "reduce": "_count", "partitioned": false}, "sentiment": {"map": "function (doc) {\n  emit([doc.sa2_2016_lv12_code, doc.sentiment_scores ? doc.sentiment_scores.sentiment : 'none'], 1);\n}", "reduce": "_count"}}, "indexes": {}}